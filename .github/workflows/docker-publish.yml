name: OpenShift Application Deployment

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '32 9 5 * *'
  push:
    branches: [ "main" ]
    tags: 
     - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: quay.io
  IMAGE_NAME: cpranava0/mocf-api
  DOCKER_FILE_LOCATION: ./Dockerfile
  DOCKER_SECRET: ${{ secrets.QUAY_TOKEN }} 
  DOCKER_USER: cpranava0+githubsa
  DEV_NAMESPACE: mocf-api-dev
  NP_NAMESPACE: mocf-api-np
  PROD_NAMESPACE: mocf-api-prod
  OPENSHIFT_SERVER: https://api.cluster-p755q.p755q.sandbox854.opentlc.com:6443
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}

jobs:
  build_push:
    name: Build and Push to Container Registry
    runs-on: ubuntu-20.04
    outputs:
       release_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.meta.outputs.tags }}
          containerfiles: ${{ env.DOCKER_FILE_LOCATION }}

      - name: Push to GitHub Container Repository
        id: push-to-docker-io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.meta.outputs.tags }}
          registry: ${{ env.REGISTRY }} 
          username: ${{ env.DOCKER_USER }} 
          password: ${{ env.DOCKER_SECRET }}
          
  deploy_openshift:
    name: Deploy to Dev OpenShift
    runs-on: 'ubuntu-latest'
    needs: build_push
    environment: production
    steps:
     - name: Checkout repository
       uses: actions/checkout@v3

     - name: Log in to OpenShift
       uses: redhat-actions/oc-login@v1
       with:
         openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
         openshift_token: ${{ env.OPENSHIFT_TOKEN }}
         insecure_skip_tls_verify: true
         namespace: ${{ env.OPENSHIFT_NAMESPACE }}

     - name: helm install
       shell: bash
       run: helm upgrade --install --create-namespace -n ${{ env.DEV_NAMESPACE }} -f environments/values.dev.yaml --set .Values.cmData=${{ secrets.CM_DATA }} --set .Values.cmSecret=${{ secrets.CM_SECRET }} --set .Values.imageName=${{ needs.build_push.outputs.release_tag }} ${{ github.sha }} mocf-api
